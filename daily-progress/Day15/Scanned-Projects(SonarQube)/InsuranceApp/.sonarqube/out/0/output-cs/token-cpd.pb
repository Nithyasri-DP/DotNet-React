πh
=D:\VSCodezz\InsuranceApp\InsuranceApp\Services\QueryHelper.cs
	namespace 	
InsuranceApp
 
. 
Services 
{		 
public

 

static

 
class

 
QueryHelper

 #
{ 
public 
static 
void 
GetCustomersByCity -
(- .
List. 2
<2 3
Customer3 ;
>; <
	customers= F
,F G
stringH N
cityO S
)S T
{ 	
var 
result 
= 
	customers "
." #
Where# (
(( )
c) *
=>+ -
c. /
./ 0
City0 4
==5 7
city8 <
)< =
;= >
Console 
. 
	WriteLine 
( 
$"  
$str  5
{5 6
city6 :
}: ;
$str; <
"< =
)= >
;> ?
foreach 
( 
var 
c 
in 
result $
)$ %
{ 
Console 
. 
	WriteLine !
(! "
$"" $
{$ %
c% &
.& '
Name' +
}+ ,
$str, .
{. /
c/ 0
.0 1
Age1 4
}4 5
$str5 @
"@ A
)A B
;B C
} 
} 	
public 
static 
void (
GetActivePoliciesOverPremium 7
(7 8
List8 <
<< =
	Insurance= F
>F G

insurancesH R
)R S
{ 	
var 
result 
= 

insurances #
.# $
Where$ )
() *
i* +
=>, .
i/ 0
.0 1
IsActive1 9
&&: <
i= >
.> ?
PremiumAmount? L
>M N
$numO S
)S T
;T U
Console 
. 
	WriteLine 
( 
$str M
)M N
;N O
foreach 
( 
var 
i 
in 
result $
)$ %
{ 
Console   
.   
	WriteLine   !
(  ! "
$"  " $
{  $ %
i  % &
.  & '

PolicyType  ' 1
}  1 2
$str  2 5
{  5 6
i  6 7
.  7 8
PremiumAmount  8 E
}  E F
"  F G
)  G H
;  H I
}!! 
}"" 	
public%% 
static%% 
void%%  
ListCustomerPolicies%% /
(%%/ 0
List%%0 4
<%%4 5
Customer%%5 =
>%%= >
	customers%%? H
,%%H I
List%%J N
<%%N O
	Insurance%%O X
>%%X Y

insurances%%Z d
)%%d e
{&& 	
var'' 
result'' 
='' 
from'' 
c'' 
in''  "
	customers''# ,
join(( 
i(( 
in((  "

insurances((# -
on((. 0
c((1 2
.((2 3

CustomerId((3 =
equals((> D
i((E F
.((F G

CustomerId((G Q
select)) 
new))  #
{))$ %
c))& '
.))' (
Name))( ,
,)), -
i)). /
.))/ 0

PolicyType))0 :
,)): ;
i))< =
.))= >
PremiumAmount))> K
}))L M
;))M N
Console++ 
.++ 
	WriteLine++ 
(++ 
$str++ >
)++> ?
;++? @
foreach,, 
(,, 
var,, 
item,, 
in,,  
result,,! '
),,' (
{-- 
Console.. 
... 
	WriteLine.. !
(..! "
$".." $
{..$ %
item..% )
...) *
Name..* .
}... /
$str../ 2
{..2 3
item..3 7
...7 8

PolicyType..8 B
}..B C
$str..C F
{..F G
item..G K
...K L
PremiumAmount..L Y
}..Y Z
"..Z [
)..[ \
;..\ ]
}// 
}00 	
public33 
static33 
void33 %
TotalPremiumPerPolicyType33 4
(334 5
List335 9
<339 :
	Insurance33: C
>33C D

insurances33E O
)33O P
{44 	
var55 
result55 
=55 

insurances55 #
.66 
GroupBy66 !
(66! "
i66" #
=>66$ &
i66' (
.66( )

PolicyType66) 3
)663 4
.77 
Select77  
(77  !
g77! "
=>77# %
new77& )
{77* +

PolicyType77, 6
=777 8
g779 :
.77: ;
Key77; >
,77> ?
Total77@ E
=77F G
g77H I
.77I J
Sum77J M
(77M N
x77N O
=>77P R
x77S T
.77T U
PremiumAmount77U b
)77b c
}77d e
)77e f
;77f g
Console99 
.99 
	WriteLine99 
(99 
$str99 C
)99C D
;99D E
foreach:: 
(:: 
var:: 
item:: 
in::  
result::! '
)::' (
{;; 
Console<< 
.<< 
	WriteLine<< !
(<<! "
$"<<" $
{<<$ %
item<<% )
.<<) *

PolicyType<<* 4
}<<4 5
$str<<5 7
{<<7 8
item<<8 <
.<<< =
Total<<= B
}<<B C
"<<C D
)<<D E
;<<E F
}== 
}>> 	
publicAA 
staticAA 
voidAA !
FirstCustomerFromCityAA 0
(AA0 1
ListAA1 5
<AA5 6
CustomerAA6 >
>AA> ?
	customersAA@ I
,AAI J
stringAAK Q
cityAAR V
)AAV W
{BB 	
varCC 
resultCC 
=CC 
	customersCC "
.CC" #
FirstOrDefaultCC# 1
(CC1 2
cCC2 3
=>CC4 6
cCC7 8
.CC8 9
CityCC9 =
==CC> @
cityCCA E
)CCE F
;CCF G
ConsoleEE 
.EE 
	WriteLineEE 
(EE 
$"EE  
$strEE  :
{EE: ;
cityEE; ?
}EE? @
$strEE@ A
"EEA B
)EEB C
;EEC D
ifFF 
(FF 
resultFF 
!=FF 
nullFF 
)FF 
ConsoleGG 
.GG 
	WriteLineGG !
(GG! "
$"GG" $
{GG$ %
resultGG% +
.GG+ ,
NameGG, 0
}GG0 1
$strGG1 9
{GG9 :
resultGG: @
.GG@ A
AgeGGA D
}GGD E
"GGE F
)GGF G
;GGG H
elseHH 
ConsoleII 
.II 
	WriteLineII !
(II! "
$strII" 6
)II6 7
;II7 8
}JJ 	
publicMM 
staticMM 
voidMM 
AnyInactivePolicyMM ,
(MM, -
ListMM- 1
<MM1 2
	InsuranceMM2 ;
>MM; <

insurancesMM= G
)MMG H
{NN 	
boolOO 
hasInactiveOO 
=OO 

insurancesOO )
.OO) *
AnyOO* -
(OO- .
iOO. /
=>OO0 2
!OO3 4
iOO4 5
.OO5 6
IsActiveOO6 >
)OO> ?
;OO? @
ConsoleQQ 
.QQ 
	WriteLineQQ 
(QQ 
$strQQ ,
+QQ- .
(QQ/ 0
hasInactiveQQ0 ;
?QQ< =
$strQQ> `
:QQa b
$strQQc ~
)QQ~ 
)	QQ Ä
;
QQÄ Å
}RR 	
publicUU 
staticUU 
voidUU 
AllPoliciesOver1000UU .
(UU. /
ListUU/ 3
<UU3 4
	InsuranceUU4 =
>UU= >

insurancesUU? I
)UUI J
{VV 	
boolWW 
allOverWW 
=WW 

insurancesWW %
.WW% &
AllWW& )
(WW) *
iWW* +
=>WW, .
iWW/ 0
.WW0 1
PremiumAmountWW1 >
>WW? @
$numWWA E
)WWE F
;WWF G
ConsoleYY 
.YY 
	WriteLineYY 
(YY 
$strYY \
+YY] ^
(YY_ `
allOverYY` g
?YYh i
$strYYj o
:YYp q
$strYYr v
)YYv w
)YYw x
;YYx y
}ZZ 	
public]] 
static]] 
void]] 
UniquePolicyTypes]] ,
(]], -
List]]- 1
<]]1 2
	Insurance]]2 ;
>]]; <

insurances]]= G
)]]G H
{^^ 	
var__ 
types__ 
=__ 

insurances__ "
.__" #
Select__# )
(__) *
i__* +
=>__, .
i__/ 0
.__0 1

PolicyType__1 ;
)__; <
.__< =
Distinct__= E
(__E F
)__F G
;__G H
Consoleaa 
.aa 
	WriteLineaa 
(aa 
$straa :
)aa: ;
;aa; <
foreachbb 
(bb 
varbb 
typebb 
inbb  
typesbb! &
)bb& '
{cc 
Consoledd 
.dd 
	WriteLinedd !
(dd! "
typedd" &
)dd& '
;dd' (
}ee 
}ff 	
publicii 
staticii 
voidii 
SkipTakeCustomersii ,
(ii, -
Listii- 1
<ii1 2
Customerii2 :
>ii: ;
	customersii< E
)iiE F
{jj 	
varkk 
resultkk 
=kk 
	customerskk "
.kk" #
Skipkk# '
(kk' (
$numkk( )
)kk) *
.kk* +
Takekk+ /
(kk/ 0
$numkk0 1
)kk1 2
;kk2 3
Consolemm 
.mm 
	WriteLinemm 
(mm 
$strmm O
)mmO P
;mmP Q
foreachnn 
(nn 
varnn 
cnn 
innn 
resultnn $
)nn$ %
{oo 
Consolepp 
.pp 
	WriteLinepp !
(pp! "
cpp" #
.pp# $
Namepp$ (
)pp( )
;pp) *
}qq 
}rr 	
publicuu 
staticuu 
voiduu 
TotalPremiumAmountuu -
(uu- .
Listuu. 2
<uu2 3
	Insuranceuu3 <
>uu< =

insurancesuu> H
)uuH I
{vv 	
varww 
totalww 
=ww 

insurancesww "
.ww" #
Sumww# &
(ww& '
iww' (
=>ww) +
iww, -
.ww- .
PremiumAmountww. ;
)ww; <
;ww< =
Consoleyy 
.yy 
	WriteLineyy 
(yy 
$"yy  
$stryy  =
{yy= >
totalyy> C
}yyC D
"yyD E
)yyE F
;yyF G
}zz 	
public}} 
static}} 
void}} '
CustomerWithOrWithoutPolicy}} 6
(}}6 7
List}}7 ;
<}}; <
Customer}}< D
>}}D E
	customers}}F O
,}}O P
List}}Q U
<}}U V
	Insurance}}V _
>}}_ `

insurances}}a k
)}}k l
{~~ 	
var 
result 
= 
from 
c 
in  "
	customers# ,
join
ÄÄ 
i
ÄÄ 
in
ÄÄ  "

insurances
ÄÄ# -
on
ÄÄ. 0
c
ÄÄ1 2
.
ÄÄ2 3

CustomerId
ÄÄ3 =
equals
ÄÄ> D
i
ÄÄE F
.
ÄÄF G

CustomerId
ÄÄG Q
into
ÄÄR V
joined
ÄÄW ]
from
ÅÅ 
policy
ÅÅ $
in
ÅÅ% '
joined
ÅÅ( .
.
ÅÅ. /
DefaultIfEmpty
ÅÅ/ =
(
ÅÅ= >
)
ÅÅ> ?
select
ÇÇ 
new
ÇÇ  #
{
ÉÉ 
c
ÑÑ 
.
ÑÑ 
Name
ÑÑ #
,
ÑÑ# $

PolicyType
ÖÖ '
=
ÖÖ( )
policy
ÖÖ* 0
!=
ÖÖ1 3
null
ÖÖ4 8
?
ÖÖ9 :
policy
ÖÖ; A
.
ÖÖA B

PolicyType
ÖÖB L
:
ÖÖM N
$str
ÖÖO Z
}
ÜÜ 
;
ÜÜ 
Console
àà 
.
àà 
	WriteLine
àà 
(
àà 
$str
àà H
)
ààH I
;
ààI J
foreach
ââ 
(
ââ 
var
ââ 
item
ââ 
in
ââ  
result
ââ! '
)
ââ' (
{
ää 
Console
ãã 
.
ãã 
	WriteLine
ãã !
(
ãã! "
$"
ãã" $
{
ãã$ %
item
ãã% )
.
ãã) *
Name
ãã* .
}
ãã. /
$str
ãã/ 2
{
ãã2 3
item
ãã3 7
.
ãã7 8

PolicyType
ãã8 B
}
ããB C
"
ããC D
)
ããD E
;
ããE F
}
åå 
}
çç 	
}
éé 
}èè Ú$
<D:\VSCodezz\InsuranceApp\InsuranceApp\Services\DataSample.cs
	namespace 	
InsuranceApp
 
. 
Services 
{		 
public

 

static

 
class

 

DataSample

 "
{ 
public 
static 
List 
< 
Customer #
># $
GetCustomers% 1
(1 2
)2 3
=>4 6
new7 :
List; ?
<? @
Customer@ H
>H I
{ 	
new 
Customer 
{ 

CustomerId %
=& '
$num( )
,) *
Name+ /
=0 1
$str2 ;
,; <
Age= @
=A B
$numC E
,E F
CityG K
=L M
$strN X
}Y Z
,Z [
new 
Customer 
{ 

CustomerId %
=& '
$num( )
,) *
Name+ /
=0 1
$str2 :
,: ;
Age< ?
=@ A
$numB D
,D E
CityF J
=K L
$strM T
}U V
,V W
new 
Customer 
{ 

CustomerId %
=& '
$num( )
,) *
Name+ /
=0 1
$str2 :
,: ;
Age< ?
=@ A
$numB D
,D E
CityF J
=K L
$strM U
}V W
,W X
new 
Customer 
{ 

CustomerId %
=& '
$num( )
,) *
Name+ /
=0 1
$str2 9
,9 :
Age; >
=? @
$numA C
,C D
CityE I
=J K
$strL V
}W X
,X Y
new 
Customer 
{ 

CustomerId %
=& '
$num( )
,) *
Name+ /
=0 1
$str2 8
,8 9
Age: =
=> ?
$num@ B
,B C
CityD H
=I J
$strK S
}T U
} 	
;	 

public 
static 
List 
< 
	Insurance $
>$ %
GetInsurances& 3
(3 4
)4 5
=>6 8
new9 <
List= A
<A B
	InsuranceB K
>K L
{ 	
new 
	Insurance 
{ 
PolicyId $
=% &
$num' *
,* +

CustomerId, 6
=7 8
$num9 :
,: ;

PolicyType< F
=G H
$strI Q
,Q R
PremiumAmountS `
=a b
$numc g
,g h
IsActivei q
=r s
truet x
}y z
,z {
new 
	Insurance 
{ 
PolicyId $
=% &
$num' *
,* +

CustomerId, 6
=7 8
$num9 :
,: ;

PolicyType< F
=G H
$strI O
,O P
PremiumAmountQ ^
=_ `
$numa e
,e f
IsActiveg o
=p q
falser w
}x y
,y z
new 
	Insurance 
{ 
PolicyId $
=% &
$num' *
,* +

CustomerId, 6
=7 8
$num9 :
,: ;

PolicyType< F
=G H
$strI R
,R S
PremiumAmountT a
=b c
$numd h
,h i
IsActivej r
=s t
trueu y
}z {
,{ |
new 
	Insurance 
{ 
PolicyId $
=% &
$num' *
,* +

CustomerId, 6
=7 8
$num9 :
,: ;

PolicyType< F
=G H
$strI O
,O P
PremiumAmountQ ^
=_ `
$numa e
,e f
IsActiveg o
=p q
truer v
}w x
,x y
new 
	Insurance 
{ 
PolicyId $
=% &
$num' *
,* +

CustomerId, 6
=7 8
$num9 :
,: ;

PolicyType< F
=G H
$strI O
,O P
PremiumAmountQ ^
=_ `
$numa e
,e f
IsActiveg o
=p q
truer v
}w x
} 	
;	 

} 
} ê
0D:\VSCodezz\InsuranceApp\InsuranceApp\Program.cs
	namespace 	
InsuranceApp
 
{ 
static 

class 
Program 
{ 
static 
void 
Main 
( 
string 
[  
]  !
args" &
)& '
{		 	
var

 
	customers

 
=

 

DataSample

 &
.

& '
GetCustomers

' 3
(

3 4
)

4 5
;

5 6
var 

insurances 
= 

DataSample '
.' (
GetInsurances( 5
(5 6
)6 7
;7 8
QueryHelper 
. 
GetCustomersByCity *
(* +
	customers+ 4
,4 5
$str6 @
)@ A
;A B
QueryHelper 
. (
GetActivePoliciesOverPremium 4
(4 5

insurances5 ?
)? @
;@ A
QueryHelper 
.  
ListCustomerPolicies ,
(, -
	customers- 6
,6 7

insurances8 B
)B C
;C D
QueryHelper 
. %
TotalPremiumPerPolicyType 1
(1 2

insurances2 <
)< =
;= >
QueryHelper 
. !
FirstCustomerFromCity -
(- .
	customers. 7
,7 8
$str9 A
)A B
;B C
QueryHelper 
. 
AnyInactivePolicy )
() *

insurances* 4
)4 5
;5 6
QueryHelper 
. 
AllPoliciesOver1000 +
(+ ,

insurances, 6
)6 7
;7 8
QueryHelper 
. 
UniquePolicyTypes )
() *

insurances* 4
)4 5
;5 6
QueryHelper 
. 
SkipTakeCustomers )
() *
	customers* 3
)3 4
;4 5
QueryHelper 
. 
TotalPremiumAmount *
(* +

insurances+ 5
)5 6
;6 7
QueryHelper 
. '
CustomerWithOrWithoutPolicy 3
(3 4
	customers4 =
,= >

insurances? I
)I J
;J K
} 	
} 
} †
9D:\VSCodezz\InsuranceApp\InsuranceApp\Models\Insurance.cs
	namespace 	
InsuranceApp
 
. 
Models 
{ 
public		 

class		 
	Insurance		 
{

 
public 
int 
PolicyId 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 

CustomerId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 

PolicyType !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
decimal 
PremiumAmount $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
bool 
IsActive 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} ˛
8D:\VSCodezz\InsuranceApp\InsuranceApp\Models\Customer.cs
	namespace 	
InsuranceApp
 
. 
Models 
{ 
public		 

class		 
Customer		 
{

 
public 
int 

CustomerId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
? 
Name 
{ 
get "
;" #
set$ '
;' (
}) *
public 
int 
Age 
{ 
get 
; 
set !
;! "
}# $
public 
string 
? 
City 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} 